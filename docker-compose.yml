version: '3'

networks:
  default:
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: ${SUBNET}
          gateway: ${GATEWAY}

services:
  node:
    container_name: node
    restart: always
    build:
      dockerfile: Dockerfile
      context: .
      target: development
    volumes:
      - ./src:/usr/app/src
      - /usr/app/node_modules
    ports:
      - ${PORT}:${PORT}
    depends_on:
      - postgres
    env_file:
      - .env
    environment:
      PORT: ${PORT}
      DATABASE_URL: "postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@${POSTGRES_HOST}:${POSTGRES_PORT}/${POSTGRES_DB}?schema=public"
    networks:
      - default
    command: npm run start:dev

  postgres:
    container_name: postgres
    restart: always
    build: ./postgress-db/
    ports:
      - ${POSTGRES_PORT}:${POSTGRES_PORT}
    networks:
      - default
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - pgdata:/var/lib/postgresql/data
      - ./:/logs:z
    command: postgres -c logging_collector=on -c log_destination=stderr -c log_directory=/logs
volumes:
  pgdata:
